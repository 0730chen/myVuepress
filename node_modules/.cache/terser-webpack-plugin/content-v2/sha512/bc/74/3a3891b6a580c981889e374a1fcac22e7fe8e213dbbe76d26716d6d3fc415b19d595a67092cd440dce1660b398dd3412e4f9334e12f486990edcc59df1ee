{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{217:function(n,t,a){\"use strict\";a.r(t);var s=a(0),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[a(\"h4\",{attrs:{id:\"需要配置nginx-conf文件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#需要配置nginx-conf文件\"}},[n._v(\"#\")]),n._v(\" 需要配置nginx.conf文件\")]),n._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[n._v(\"location \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[n._v(\"/\")]),n._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\"{\")]),n._v(\"\\nindex index\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\".\")]),n._v(\"html\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[n._v(\"}\")]),n._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"nginx策略\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx策略\"}},[n._v(\"#\")]),n._v(\" nginx策略\")]),n._v(\" \"),a(\"pre\",[a(\"code\",[n._v(\"* 负载均衡就是域名配置多个服务器，拦截server中的请求响应，将请求转向配置的后端服务器\\n* 轮询策略，将所有客户端的请求轮询分配给服务端，但是其中一台出现延迟会影响其他用户\\n* 最小连接策略， 将请求优先分配给压力服务小的服务器，平衡每个队列的长度\\n* 最快响应时间策略\\n* 客户端ip绑定，ip_hash 有效解决了动态网页的session共享问题\\n\")])]),n._v(\" \"),a(\"h4\",{attrs:{id:\"常用的nginx命令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常用的nginx命令\"}},[n._v(\"#\")]),n._v(\" 常用的nginx命令\")]),n._v(\" \"),a(\"pre\",[a(\"code\",[n._v(\"```shell script\\nnginx -c /etc/nginx.conf  按照配置文件启动nginx服务\\nnginx -t 检查配置文件是否出错\\nnginx -s reload 重启 nginx服务器\\n查找进程\\nnetstat -ltunp 查看端口号是否被占用\\nkill -9 端口号 杀死进程\\n```\\nnginx location 路径配置。\\nlcation /{\\nroot /root/dist/项目路径\\n}\\n如果要配置多个路径不能使用root\\nlocation /blog{\\nalias 路径名\\n}\")])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}