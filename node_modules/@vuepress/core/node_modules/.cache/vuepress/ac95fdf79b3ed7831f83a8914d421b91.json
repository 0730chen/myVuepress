{"remainingRequest":"C:\\H5\\myVuepress\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\H5\\myVuepress\\node_modules\\@vuepress\\theme-default\\components\\PageEdit.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"C:\\H5\\myVuepress\\node_modules\\@vuepress\\theme-default\\components\\PageEdit.vue","mtime":1598366107762},{"path":"C:\\H5\\myVuepress\\node_modules\\css-loader\\dist\\cjs.js","mtime":1598366109469},{"path":"C:\\H5\\myVuepress\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1598366114577},{"path":"C:\\H5\\myVuepress\\node_modules\\postcss-loader\\src\\index.js","mtime":1598366111665},{"path":"C:\\H5\\myVuepress\\node_modules\\stylus-loader\\index.js","mtime":1598366113595},{"path":"C:\\H5\\myVuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598366108411},{"path":"C:\\H5\\myVuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1598366114576}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAcmVxdWlyZSAnLi4vc3R5bGVzL3dyYXBwZXIuc3R5bCcNCg0KLnBhZ2UtZWRpdA0KICBAZXh0ZW5kICR3cmFwcGVyDQogIHBhZGRpbmctdG9wIDFyZW0NCiAgcGFkZGluZy1ib3R0b20gMXJlbQ0KICBvdmVyZmxvdyBhdXRvDQoNCiAgLmVkaXQtbGluaw0KICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrDQogICAgYQ0KICAgICAgY29sb3IgbGlnaHRlbigkdGV4dENvbG9yLCAyNSUpDQogICAgICBtYXJnaW4tcmlnaHQgMC4yNXJlbQ0KICAubGFzdC11cGRhdGVkDQogICAgZmxvYXQgcmlnaHQNCiAgICBmb250LXNpemUgMC45ZW0NCiAgICAucHJlZml4DQogICAgICBmb250LXdlaWdodCA1MDANCiAgICAgIGNvbG9yIGxpZ2h0ZW4oJHRleHRDb2xvciwgMjUlKQ0KICAgIC50aW1lDQogICAgICBmb250LXdlaWdodCA0MDANCiAgICAgIGNvbG9yICNhYWENCg0KQG1lZGlhIChtYXgtd2lkdGg6ICRNUU1vYmlsZSkNCiAgLnBhZ2UtZWRpdA0KICAgIC5lZGl0LWxpbmsNCiAgICAgIG1hcmdpbi1ib3R0b20gMC41cmVtDQogICAgLmxhc3QtdXBkYXRlZA0KICAgICAgZm9udC1zaXplIDAuOGVtDQogICAgICBmbG9hdCBub25lDQogICAgICB0ZXh0LWFsaWduIGxlZnQNCg0K"},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\r\n  <footer class=\"page-edit\">\r\n    <div class=\"edit-link\" v-if=\"editLink\">\r\n      <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">{{ editLinkText }}</a>\r\n      <OutboundLink />\r\n    </div>\r\n\r\n    <div class=\"last-updated\" v-if=\"lastUpdated\">\r\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\r\n      <span class=\"time\">{{ lastUpdated }}</span>\r\n    </div>\r\n  </footer>\r\n</template>\r\n<script>\r\nimport isNil from 'lodash/isNil'\r\nimport { endingSlashRE, outboundRE } from '../util'\r\n\r\nexport default {\r\n  name: 'PageEdit',\r\n  computed: {\r\n    lastUpdated () {\r\n      return this.$page.lastUpdated\r\n    },\r\n\r\n    lastUpdatedText () {\r\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\r\n        return this.$themeLocaleConfig.lastUpdated\r\n      }\r\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\r\n        return this.$site.themeConfig.lastUpdated\r\n      }\r\n      return 'Last Updated'\r\n    },\r\n\r\n    editLink () {\r\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\r\n        ? this.$site.themeConfig.editLinks\r\n        : this.$page.frontmatter.editLink\r\n\r\n      const {\r\n        repo,\r\n        docsDir = '',\r\n        docsBranch = 'master',\r\n        docsRepo = repo\r\n      } = this.$site.themeConfig\r\n\r\n      if (showEditLink && docsRepo && this.$page.relativePath) {\r\n        return this.createEditLink(\r\n          repo,\r\n          docsRepo,\r\n          docsDir,\r\n          docsBranch,\r\n          this.$page.relativePath\r\n        )\r\n      }\r\n      return null\r\n    },\r\n\r\n    editLinkText () {\r\n      return (\r\n        this.$themeLocaleConfig.editLinkText\r\n        || this.$site.themeConfig.editLinkText\r\n        || `Edit this page`\r\n      )\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\r\n      const bitbucket = /bitbucket.org/\r\n      if (bitbucket.test(repo)) {\r\n        const base = outboundRE.test(docsRepo) ? docsRepo : repo\r\n        return (\r\n          base.replace(endingSlashRE, '')\r\n          + `/src`\r\n          + `/${docsBranch}/`\r\n          + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\r\n          + path\r\n          + `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\r\n        )\r\n      }\r\n\r\n      const base = outboundRE.test(docsRepo)\r\n        ? docsRepo\r\n        : `https://github.com/${docsRepo}`\r\n      return (\r\n        base.replace(endingSlashRE, '')\r\n        + `/edit`\r\n        + `/${docsBranch}/`\r\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\r\n        + path\r\n      )\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\">\r\n@require '../styles/wrapper.styl'\r\n\r\n.page-edit\r\n  @extend $wrapper\r\n  padding-top 1rem\r\n  padding-bottom 1rem\r\n  overflow auto\r\n\r\n  .edit-link\r\n    display inline-block\r\n    a\r\n      color lighten($textColor, 25%)\r\n      margin-right 0.25rem\r\n  .last-updated\r\n    float right\r\n    font-size 0.9em\r\n    .prefix\r\n      font-weight 500\r\n      color lighten($textColor, 25%)\r\n    .time\r\n      font-weight 400\r\n      color #aaa\r\n\r\n@media (max-width: $MQMobile)\r\n  .page-edit\r\n    .edit-link\r\n      margin-bottom 0.5rem\r\n    .last-updated\r\n      font-size 0.8em\r\n      float none\r\n      text-align left\r\n\r\n</style>\r\n"]}]}