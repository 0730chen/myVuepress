(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{564:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"什么是虚拟dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是虚拟dom"}},[t._v("#")]),t._v(" 什么是虚拟Dom")]),t._v(" "),s("p",[t._v("1.虚拟Dom是使用js对象来描述真实Dom的一种方式。通常包含标签名，标签上的属性，事件监听和其他属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        children"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vue中是")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("ul",[s("li",[t._v("如何创建虚拟Dom，React.createElement('div'),h()两个函数进行创建")]),t._v(" "),s("li",[t._v("React使用jsx语法创建虚拟Dom,bable会进行解析，vue使用template在使用vue-loader进行解析")]),t._v(" "),s("li",[t._v("规模大的时候原生DOM会比虚拟Dom快，数据量小的时候会更快（10000个数据插入）")])]),t._v(" "),s("h4",{attrs:{id:"虚拟dom的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的优点"}},[t._v("#")]),t._v(" 虚拟Dom的优点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("某些情况下，虚拟Dom比真实Dom快。数据量小的时候是原生Dom快。比如添加1000个节点，原生Dom就要进行1000次操作，虚拟Dom只用执行一次。减少Dom操作的范围。比如说你要新增一个")])]),t._v(" "),s("li",[s("p",[t._v("跨平台应用，虚拟Dom不仅可以变成真实Dom,也可以变成小程序，ios,安卓应用。本质就是一个js对象")])])]),t._v(" "),s("h4",{attrs:{id:"虚拟dom的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的缺点"}},[t._v("#")]),t._v(" 虚拟Dom的缺点")]),t._v(" "),s("p",[t._v("需要额外的解析操作，比如createElement,h,将虚拟Dom进行转换，可以使用jsx和VueTemplate进行虚拟Dom创建")]),t._v(" "),s("h4",{attrs:{id:"dom-diff是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-diff是什么"}},[t._v("#")]),t._v(" Dom diff是什么")]),t._v(" "),s("p",[t._v("Dom diff是一个函数")]),t._v(" "),s("p",[t._v("Dom diff的逻辑")]),t._v(" "),s("ul",[s("li",[t._v("Tree diff对比,将新旧两棵树逐层进行对比，找出那些节点需要更新，如果是组件就看Component diff 如果是标签就看Element")]),t._v(" "),s("li",[t._v("Component diff 如果节点是组件，先看类型，如果不同直接替换，类型相同则更新属性，然后深入组件做递归")]),t._v(" "),s("li",[t._v("Element diff 如果节点是原生标签，则看标签名，不同则替换，相同则更新属性，然后进行标签进行递归")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("newNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进行一系列的比较")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("将虚拟Dom想象成树形")]),t._v(" "),s("ul",[s("li",[t._v("减少Dom操作次数，只改变虚拟Dom的属性，计算机是从左往右对比的。第一个hello变成world，第二个world会直接删除")])]),t._v(" "),s("h4",{attrs:{id:"dom-diff的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-diff的优点"}},[t._v("#")]),t._v(" Dom diff的优点")]),t._v(" "),s("p",[t._v("减少Dom操作，跨平台")]),t._v(" "),s("h4",{attrs:{id:"dom-diff的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-diff的问题"}},[t._v("#")]),t._v(" Dom diff的问题")]),t._v(" "),s("p",[t._v("问题数组在页面中渲染，三个组件，删除中间的组件则[1,2,3]=>[1,3]")]),t._v(" "),s("p",[t._v("进行对比 1=>1 2=>3 3删除了,所以不建议使用index作为数组渲染的key，因为index是会变得")])])}),[],!1,null,null,null);a.default=e.exports}}]);