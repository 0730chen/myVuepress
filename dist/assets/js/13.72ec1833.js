(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{213:function(l,n,t){"use strict";t.r(n);var v=t(0),_=Object(v.a)({},(function(){var l=this,n=l.$createElement,t=l._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[t("ol",[t("li",[l._v("什么是算法")])]),l._v(" "),t("p",[l._v("比如你在一个书店，你要将一组书排列整齐，按照一定规律进行排列，这就是数据结构，当你想找一本书的时候，所使用的方法就是算法\n算法比较抽象，描述一系列动作")]),l._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[l._v("算法的定义")]),l._v(" "),t("ul",[t("li",[l._v("一个有限的指令集")]),l._v(" "),t("li",[l._v("可以有输入，一定有输出")]),l._v(" "),t("li",[l._v("在一定步骤后停止")]),l._v(" "),t("li",[l._v("每一条指令都有明确的意义")])])]),l._v(" "),t("li",[t("p",[l._v("算法的好坏\n根据数据量的大小，复杂度也会变化")]),l._v(" "),t("ul",[t("li",[l._v("时间复杂度 T(o)")])]),l._v(" "),t("p",[l._v("时间复杂度是使计算循环中乘除运行的次数\nlogn<n<nlogn<n平方\nT(o) = O(f(n))\nfor循环中的时间复杂度就是循环次数*循环体的复杂度")]),l._v(" "),t("ul",[t("li",[l._v("空间复杂度 S(o)")])])])])])}),[],!1,null,null,null);n.default=_.exports}}]);