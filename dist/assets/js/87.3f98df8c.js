(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{569:function(a,s,t){"use strict";t.r(s);var e=t(4),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h4",{attrs:{id:"java的基本数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java的基本数据类型"}},[a._v("#")]),a._v(" Java的基本数据类型")]),a._v(" "),t("ol",[t("li",[a._v("一共有8种数据类型，6种数字类型，一种字符类型，一种布尔类型")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("byte类型，是8位数据类型，范围为2^7次方之间,byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；")])]),a._v(" "),t("li",[t("p",[a._v("short数据类型,是16位，有符号的整数类型，范围再2^15次方范围之内,short数据类型，一个short变量是int变量所占空间的二分之一")])]),a._v(" "),t("li",[t("p",[a._v("Int数据类型，int 数据类型是32位。他的一般默认值就是int类型")])]),a._v(" "),t("li",[t("p",[a._v("long 表示64位，这种类型主要使用在需要比较大整数的系统上")])])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000L")]),a._v("\n")])])]),t("ul",[t("li",[a._v("float float 数据类型是单精度、32位、符合IEEE 754标准的浮点数，不能表示精确的值")])]),a._v(" "),t("div",{staticClass:"language-Java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" f1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("23.4f")]),a._v("\n")])])]),t("ul",[t("li",[a._v("double，精度为双精度，64位，浮点数的默认类型为double类型；")])]),a._v(" "),t("div",{staticClass:"language-Java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" d1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123.4")]),a._v("\n")])])]),t("ul",[t("li",[a._v("boolean,默认值是false，只能取两个值")])]),a._v(" "),t("div",{staticClass:"language-Java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" b1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),t("ul",[t("li",[a._v("char 字符类型，单一16位字符型")])]),a._v(" "),t("div",{staticClass:"language-Java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xxx"')]),a._v("\n")])])]),t("h4",{attrs:{id:"访问控制修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问控制修饰符"}},[a._v("#")]),a._v(" 访问控制修饰符")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("default (即默认，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。")])]),a._v(" "),t("li",[t("p",[a._v("在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）")])]),a._v(" "),t("li",[t("p",[a._v("对所有类可见。使用对象：类、接口、变量、方法")])]),a._v(" "),t("li",[t("p",[a._v("对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);