<<<<<<< HEAD:dist/assets/js/36.a8807e6a.js
(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{516:function(l,t,a){"use strict";a.r(t);var v=a(4),s=Object(v.a)({},(function(){var l=this,t=l.$createElement,a=l._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[a("h3",{attrs:{id:"js-的诞生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-的诞生"}},[l._v("#")]),l._v(" Js 的诞生")]),l._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[l._v("JavaScript是JS语言，有明确的语法，数据类型\nES是规则是JavaScript的标准规则，他两之间不是包含关系\n")])])]),a("ol",[a("li",[a("p",[l._v("Js 的基本特点\n是一种解释性脚本语言(代码不用进行预编译)\n主要应用在网页端\n可以跨平台使用")])]),l._v(" "),a("li",[a("p",[l._v("Js 的设计思路")]),l._v(" "),a("ol",[a("li",[l._v("借鉴 C 语言的基本语法")]),l._v(" "),a("li",[l._v("借鉴 Java 的数据类型和内存管理")]),l._v(" "),a("li",[l._v("借鉴 scheme 语言，将函数提升到一等公民")]),l._v(" "),a("li",[l._v("借鉴 self 语言，使用基于原型继承的机制 prototype")])])]),l._v(" "),a("li",[a("p",[l._v("Js 在设计之初存在的 10 个缺陷")]),l._v(" "),a("ol",[a("li",[l._v("不合适开发大型应用程序：没有模块化，允许同名函数的重复定义，后面定义可以覆盖前面定义")]),l._v(" "),a("li",[l._v("标准库非常小，很多功能还不具备")]),l._v(" "),a("li",[l._v("null 与 undefined： null 属于 object 的一种，undefined 是未定义，是一种数据类型")]),l._v(" "),a("li",[l._v("全局变量:在 JS 中，全局变量是所有模块中都可见的，函数内容也可以生成全局变量")]),l._v(" "),a("li",[l._v("自动插入行尾分号：js 语句必须以分号结尾，但是如果你忘记加上分号，解释器在运行时会自动加上分号。")]),l._v(" "),a("li",[l._v("加号运算符 : 当数字与字符串相加，会将数字当成字符串然后拼接。两种不同类型的数据可以相加，不会报错")]),l._v(" "),a("li",[l._v("NaN:是一种数字，表示了超过解释器极限的数字 ，NaN === NaN //false")]),l._v(" "),a("li",[l._v("数组和对象的区分:js 中数组也是属于对象")]),l._v(" "),a("li",[l._v("== 与===： == 在某些情况下不够严谨，往后使用 === 代替 == 比如 ：")])]),l._v(" "),a("div",{staticClass:"language-javacript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[l._v("[] =='' //true\n[] ==0\n0 ==''\n")])])]),a("ol",{attrs:{start:"10"}},[a("li",[l._v("Javascript 的基本类型包装对象：字符串，number，布尔，symbol，基本类型是基本类型，基本类型的包装对象是对象")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);
=======
(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{518:function(l,t,a){"use strict";a.r(t);var v=a(4),s=Object(v.a)({},(function(){var l=this,t=l.$createElement,a=l._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[a("h3",{attrs:{id:"js-的诞生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-的诞生"}},[l._v("#")]),l._v(" Js 的诞生")]),l._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[l._v("JavaScript是JS语言，有明确的语法，数据类型\nES是规则是JavaScript的标准规则，他两之间不是包含关系\n")])])]),a("ol",[a("li",[a("p",[l._v("Js 的基本特点\n是一种解释性脚本语言(代码不用进行预编译)\n主要应用在网页端\n可以跨平台使用")])]),l._v(" "),a("li",[a("p",[l._v("Js 的设计思路")]),l._v(" "),a("ol",[a("li",[l._v("借鉴 C 语言的基本语法")]),l._v(" "),a("li",[l._v("借鉴 Java 的数据类型和内存管理")]),l._v(" "),a("li",[l._v("借鉴 scheme 语言，将函数提升到一等公民")]),l._v(" "),a("li",[l._v("借鉴 self 语言，使用基于原型继承的机制 prototype")])])]),l._v(" "),a("li",[a("p",[l._v("Js 在设计之初存在的 10 个缺陷")]),l._v(" "),a("ol",[a("li",[l._v("不合适开发大型应用程序：没有模块化，允许同名函数的重复定义，后面定义可以覆盖前面定义")]),l._v(" "),a("li",[l._v("标准库非常小，很多功能还不具备")]),l._v(" "),a("li",[l._v("null 与 undefined： null 属于 object 的一种，undefined 是未定义，是一种数据类型")]),l._v(" "),a("li",[l._v("全局变量:在 JS 中，全局变量是所有模块中都可见的，函数内容也可以生成全局变量")]),l._v(" "),a("li",[l._v("自动插入行尾分号：js 语句必须以分号结尾，但是如果你忘记加上分号，解释器在运行时会自动加上分号。")]),l._v(" "),a("li",[l._v("加号运算符 : 当数字与字符串相加，会将数字当成字符串然后拼接。两种不同类型的数据可以相加，不会报错")]),l._v(" "),a("li",[l._v("NaN:是一种数字，表示了超过解释器极限的数字 ，NaN === NaN //false")]),l._v(" "),a("li",[l._v("数组和对象的区分:js 中数组也是属于对象")]),l._v(" "),a("li",[l._v("== 与===： == 在某些情况下不够严谨，往后使用 === 代替 == 比如 ：")])]),l._v(" "),a("div",{staticClass:"language-javacript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[l._v("[] =='' //true\n[] ==0\n0 ==''\n")])])]),a("ol",{attrs:{start:"10"}},[a("li",[l._v("Javascript 的基本类型包装对象：字符串，number，布尔，symbol，基本类型是基本类型，基本类型的包装对象是对象")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);
>>>>>>> 0dfc753d4547d3ed200e32f2ba2074fa65f56294:dist/assets/js/36.b0c36b1b.js
